// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client" // Specify the path where Prisma Client should be generated
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?   // Added password field
  image         String?
  accounts      Account[]
  sessions      Session[]
  savedItems    SavedItem[]
  platforms     Platform[]
  reminders     Reminder[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Platform {
  id          String    @id @default(cuid())
  name        String
  userId      String
  lastSynced  DateTime?
  isActive    Boolean   @default(true)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  savedItems  SavedItem[]

  @@unique([name, userId])
}

model SavedItem {
  id          String    @id @default(cuid())
  externalId  String
  title       String
  description String?   @db.Text
  url         String
  thumbnailUrl String?
  contentType String
  platformId  String
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  platform    Platform  @relation(fields: [platformId], references: [id], onDelete: Cascade)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  reminders   Reminder[]
  tags        Tag[]     @relation("SavedItemToTag")

  @@unique([externalId, platformId])
}

model Reminder {
  id          String    @id @default(cuid())
  savedItemId String
  userId      String
  reminderDate DateTime
  isCompleted Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  savedItem   SavedItem @relation(fields: [savedItemId], references: [id], onDelete: Cascade)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Tag {
  id          String    @id @default(cuid())
  name        String
  savedItems  SavedItem[] @relation("SavedItemToTag")

  @@unique([name])
}
